#BlueJ class context
comment0.target=DayTest
comment0.text=\r\n\ The\ test\ class\ DayTest.\r\n\r\n\ @author\ \ David\ J.\ Barnes\ and\ Michael\ Kolling\r\n\ @version\ 2008.03.30\r\n
comment1.params=
comment1.target=DayTest()
comment1.text=\r\n\ Default\ constructor\ for\ test\ class\ DayTest\r\n
comment10.params=
comment10.target=void\ testFindSpaceTen()
comment10.text=\r\n\ Check\ that\ findSpace\ returns\ a\ value\ of\ 10\ for\ an\ one-hour\r\n\ appointment\ if\ there\ is\ already\ an\ one-hour\ appointment\ at\ 9am.\r\n
comment11.params=
comment11.target=void\ testNoSpaceLeft()
comment11.text=\r\n\ Check\ that\ findSpace\ returns\ a\ value\ of\ -1\ if\ an\ attempt\ is\ \r\n\ made\ to\ find\ an\ appointment\ in\ a\ day,\ that\ is\ already\ full.\r\n
comment12.params=
comment12.target=void\ testDoubleBookingDifferentDuration()
comment12.text=\r\n\ Check\ that\ double-booking\ with\ different\ duration\ \r\n\ is\ not\ permitted.\ \r\n
comment13.params=
comment13.target=void\ testDoubleBookingTwo()
comment14.params=
comment14.target=void\ testPositiveFirstAvailableTime()
comment14.text=\r\n\ Check\ that\ findSpace\ returns\ 9\ for\ the\ first\ available\ time\r\n\ for\ an\ appointment\ in\ a\ free\ day.\r\n
comment15.params=
comment15.target=void\ testNegativeAppointmentDurationMinusOne()
comment15.text=\r\n\ Check\ that\ an\ appointment\ with\ a\ duration\ of\ -1\r\n\ cannot\ be\ added\ to\ a\ day.\r\n
comment16.params=
comment16.target=void\ testFindSpaceAfter8hAppointment()
comment16.text=\r\n\ Creates\ an\ appointment\ with\ duration\ 8\ hours\ (\ 9\ to\ 17\ ),\ then\r\n\ finds\ space\ for\ another\ appointment\ with\ 1\ hour\ duration\ and\r\n\ should\ return\ 17.\r\n
comment17.params=
comment17.target=void\ testNegativeAddDurationOf0()
comment17.text=\r\n\ Creates\ appointment\ with\ a\ 0\ hour\ duration\ and\ adds\ the\r\n\ appointment\ to\ a\ day.\ Expected\ to\ not\ be\ possible.\r\n
comment18.params=
comment18.target=void\ testCannotTakeAppointmentBefore9After18()
comment18.text=\r\n\ Creates\ a\ 1\ hour\ appointment\ and\ checks\ that\ it\ can't\ be\r\n\ added\ to\ a\ day\ before\ 9\ or\ after\ 18\ o'clock.\r\n
comment19.params=
comment19.target=void\ testNegativeNotAllowedDayNumber()
comment19.text=\r\n\ Checks\ if\ it's\ possible\ to\ create\ a\ "-1","0"\ or\ anything\r\n\ above\ "366"\ day.\ Only\ days\ between\ 1\ and\ 366\ should\ be\ allowed.\ \r\n
comment2.params=
comment2.target=void\ setUp()
comment2.text=\r\n\ Sets\ up\ the\ test\ fixture.\r\n\r\n\ Called\ before\ every\ test\ case\ method.\r\n
comment20.params=
comment20.target=void\ testNegativeValidTimeBefore9()
comment20.text=\r\n\ Checks\ that\ the\ time\ before\ 9\ is\ not\ valid\ for\ appointments\r\n
comment21.params=
comment21.target=void\ testNegativeValidTimeAfter18()
comment21.text=\r\n\ Checks\ that\ the\ time\ after\ 18\ is\ not\ valid\ for\ appointments\r\n
comment22.params=
comment22.target=void\ testPositiveValidTime()
comment22.text=\r\n\ Test\ basic\ functionality\ by\ looking\ for\ a\ valid\ time\ at\ either\ \r\n\ beginning,\ middle\ or\ end\ of\ a\ day.\r\n
comment23.params=
comment23.target=void\ testFindSpaceForNegativeDuration()
comment23.text=\r\n\ Creates\ a\ 1\ hour\ appointment\ and\ finds\ space\ for\ it.\ Program\r\n\ returns\ 9,\ which\ is\ correct.\ Then\ creates\ an\ appointment\ with\r\n\ duration\ 0\ hours,\ which\ should\ not\ be\ possible,\ and\ findSpace\r\n\ returns\ -1,\ which\ is\ supposed\ to\ be\ for\ insufficient\ space,\r\n\ but\ there\ actually\ is\ enough\ space.\ We\ should\ not\ allow\ \r\n\ appointments\ to\ be\ created\ with\ a\ duration\ less\ than\ 1.\r\n
comment24.params=
comment24.target=void\ testAdding10HourAppointment()
comment25.params=
comment25.target=void\ testAdding10HourAppointment1()
comment3.params=
comment3.target=void\ tearDown()
comment3.text=\r\n\ Tears\ down\ the\ test\ fixture.\r\n\r\n\ Called\ after\ every\ test\ case\ method.\r\n
comment4.params=
comment4.target=void\ testMakeThreeAppointments()
comment4.text=\r\n\ Test\ basic\ functionality\ by\ booking\ at\ either\ end\r\n\ of\ a\ day,\ and\ in\ the\ middle.\r\n
comment5.params=
comment5.target=void\ testDoubleBooking()
comment5.text=\r\n\ Check\ that\ double-booking\ is\ not\ permitted.\r\n
comment6.params=
comment6.target=void\ testFindSpaceEmpty()
comment6.text=\r\n\ Check\ that\ the\ first\ appointment\ for\ an\ empty\ diary\ is\ at\ 9\ a.m.\r\n
comment7.params=
comment7.target=void\ testFindSpace9()
comment7.text=\r\n\ \r\n
comment8.params=
comment8.target=void\ testNotFull()
comment8.text=\r\n\ \r\n
comment9.params=
comment9.target=void\ testFindSpace()
comment9.text=\r\n\ Checks\ that\ findSpace\ method\ returns\ 10\ for\ the\ second\r\n\ appointment\ in\ a\ day,\ if\ there\ is\ already\ a\ single\r\n\ one-hour\ appointment.\r\n
numComments=26
